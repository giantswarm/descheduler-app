apiVersion: batch/{{ if ge (.Capabilities.KubeVersion.Minor | int) 21 }}v1{{ else }}v1beta1{{ end }}
kind: CronJob
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  schedule: {{ .Values.schedule | quote }}
  concurrencyPolicy: "Forbid"
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      template:
        metadata:
          name: {{ .Values.name }}
          annotations:
            checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
          labels:
            {{- include "labels.common" . | nindent 12 }}
        spec:
          priorityClassName: system-cluster-critical
          serviceAccountName: {{ .Values.name }}
          restartPolicy: "Never"
          containers:
            - name: descheduler
              image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
              imagePullPolicy: IfNotPresent
              command:
                - "/bin/descheduler"
              args:
                - "--policy-config-file"
                - "/policy-dir/policy.yaml"
                - "-v=3"
              {{- if .Values.resources }}
              resources: {{ toYaml .Values.resources | nindent 16 }}
              {{- end }}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /policy-dir
                  name: policy-volume
          volumes:
          - name: policy-volume
            configMap:
              name: {{ .Values.name }}
